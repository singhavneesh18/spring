plugins {
    id 'org.springframework.boot' version '2.5.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'scala'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '15'

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.scala-lang:scala-library:2.12.10'
    testImplementation 'org.scalatest:scalatest_2.12:3.0.1'
    testImplementation 'io.gatling.highcharts:gatling-charts-highcharts:2.3.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

sourceSets {
    performanceTest {
        scala {
            srcDirs = ['src/performanceTest/scala']
        }
    }
}

/**
 * Gatling load tests
 */
task testLoad(type: JavaExec) {
    description = 'Test load the Spring Boot web service with Gatling'
    group = 'Load Test'
    classpath = sourceSets.test.runtimeClasspath
    jvmArgs = [
            // workaround for https://github.com/gatling/gatling/issues/2689
            "-Dgatling.core.directory.binaries=${sourceSets.test.output.classesDirs.toString()}",
            "-Dlogback.configurationFile=${logbackGatlingConfig()}"
    ]
    mainClass = 'io.gatling.app.Gatling'
    args = [
            '--simulation', 'webservice.gatling.simulation.WebServiceCallSimulation',
            '--results-folder', "${buildDir}/gatling-results",
            '--binaries-folder', sourceSets.test.output.classesDirs.toString() // ignored because of above bug
    ]
}

def logbackGatlingConfig() {
    return sourceSets.test.resources.find { it.name == 'logback-gatling.xml' };
}